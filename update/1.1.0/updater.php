<?
$moduleId = "awz.autounp";
if(IsModuleInstalled($moduleId)) {
    $updater->CopyFiles(
        "install/components/autounp.config.permissions",
        "components/awz/autounp.config.permissions",
        true,
        true
    );
    $connection = \Bitrix\Main\Application::getConnection();
    if($connection->getType()=='mysql'){
        $sql = "CREATE TABLE IF NOT EXISTS awz_autounp_role (
        ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
        NAME VARCHAR(250) NOT NULL,
        PRIMARY KEY (ID)
        );";
        $connection->queryExecute($sql);
        $sql = "CREATE TABLE IF NOT EXISTS awz_autounp_role_relation (
        ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
        ROLE_ID INT(10) UNSIGNED NOT NULL,
        RELATION VARCHAR(8) NOT NULL DEFAULT '',
        PRIMARY KEY (ID),
        INDEX ROLE_ID (ROLE_ID),
        INDEX RELATION (RELATION)
        );";
        $connection->queryExecute($sql);
        $sql = "CREATE TABLE IF NOT EXISTS awz_autounp_permission (
        ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
        ROLE_ID INT(10) UNSIGNED NOT NULL,
        PERMISSION_ID VARCHAR(32) NOT NULL DEFAULT '0',
        VALUE TINYINT(3) UNSIGNED NOT NULL DEFAULT '0',
        PRIMARY KEY (ID),
        INDEX ROLE_ID (ROLE_ID),
        INDEX PERMISSION_ID (PERMISSION_ID)
        );";
        $connection->queryExecute($sql);
    }
    elseif($connection->getType()=='pgsql' && !$updater->TableExists('awz_autounp_permission')){
        $sql = "CREATE TABLE awz_autounp_role (
        ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        NAME varchar(250) NOT NULL,
        PRIMARY KEY (ID)
        );";
        $connection->queryExecute($sql);
        $sql = "CREATE TABLE awz_autounp_role_relation (
        ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        ROLE_ID int NOT NULL DEFAULT 0,
        RELATION varchar(8) NOT NULL DEFAULT '',
        PRIMARY KEY (ID)
        );";
        $connection->queryExecute($sql);
        $sql = "CREATE TABLE awz_autounp_permission (
        ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        ROLE_ID int NOT NULL DEFAULT 0,
        PERMISSION_ID varchar(32) NOT NULL DEFAULT '0',
        VALUE int NOT NULL DEFAULT 0,
        PRIMARY KEY (ID)
        );";
        $connection->queryExecute($sql);
        $connection->queryExecute(
            'CREATE INDEX awz_autounp_role_relation_role_id ON awz_autounp_role_relation (role_id);'
        );
        $connection->queryExecute(
            'CREATE INDEX awz_autounp_role_relation_relation ON awz_autounp_role_relation (relation);'
        );
        $connection->queryExecute(
            'CREATE INDEX awz_autounp_permission_role_id ON awz_autounp_permission (role_id);'
        );
        $connection->queryExecute(
            'CREATE INDEX awz_autounp_permission_permission_id ON awz_autounp_permission (permission_id);'
        );
    }

    $eventManager = \Bitrix\Main\EventManager::getInstance();
    $eventManager->registerEventHandlerCompatible(
        'main', 'OnAfterUserUpdate',
        $moduleId, '\\Awz\\Autounp\\Access\\Handlers', 'OnAfterUserUpdate'
    );
    $eventManager->registerEventHandlerCompatible(
        'main', 'OnAfterUserAdd',
        $moduleId, '\\Awz\\Autounp\\Access\\Handlers', 'OnAfterUserUpdate'
    );
}